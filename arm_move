from pickle import TRUE
from interbotix_xs_modules.xs_robot.arm import InterbotixManipulatorXS
import modern_robotics as mr
#from interbotix_xs_modules.xs_robot.gripper import InterbotixGripperXS

# The robot object is what you use to control the robot
robot = InterbotixManipulatorXS("px100", "arm", "gripper")
#robot_gripper = InterbotixGripperXS("px100","gripper")
mode = 'h'

#print(robot.arm.get_joint_commands())

# Rotatioin matrix
joints = robot.arm.get_joint_commands()
T = mr.FKinSpace(robot.arm.robot_des.M, robot.arm.robot_des.Slist, joints)
[R, p] = mr.TransToRp(T) # get the rotation matrix and the displacement
print('T = ', T, '\n R = ', R, '\n p = ', p)

def get_gripper_pos():
    # Rotatioin matrix
    joints = robot.arm.get_joint_commands()
    T = mr.FKinSpace(robot.arm.robot_des.M, robot.arm.robot_des.Slist, joints)
    [R, p] = mr.TransToRp(T) # get the rotation matrix and the displacement
    return [R, p]


joint_positions = [0.0, 0.0, 0.0, 0.0] # [waist,shoulder,elbow,wrist]
Home_pose = [0.0, 0.0, 0.0, 0.0]
Cobra_pose = [-1.0, -1.0, -1.0, 2.0]
# joint_positions = [-1.0, -1.0, -1.0, 2.0] # Do the Cobra
# Let the user select the position
while mode != 'q':
    mode=input("[h]ome, [s]leep, [q]uit, [g]rasp, [r]elease, [all], [cobra], [cb], [acb], [cart]. [z], [x]")
    if mode == "h":
        robot.arm.go_to_home_pose()
    elif mode == "s":
        robot.arm.go_to_sleep_pose()
        [R, p] = get_gripper_pos()
        print('\n p = ', p)
    
    elif mode == "g":
        robot.gripper.grasp()
    elif mode == "r":
        robot.gripper.release()
    elif mode == "cb":
         robot.arm.set_single_joint_position('waist',-1.5)
         [R, p] = get_gripper_pos()
         print('\n p = ', p)
    elif mode == "acb":
         robot.arm.set_single_joint_position('waist',1.5, moving_time=2)
         [R, p] = get_gripper_pos()
         print('\n p = ', p)
    # elif mode == "wu":
    #     robot.arm.set_single_joint_position('wrist_angle',-1.0)
    # elif mode == "wd":
    #     robot.arm.set_single_joint_position('wrist_angle',1.0)
    # elif mode == "wh":
    #     robot.arm.set_single_joint_position('wrist_angle',0.0)
    # elif mode == "eu":
    #     robot.arm.set_single_joint_position('elbow',-1.0)
    elif mode == "all":
        joint_positions = Home_pose
        robot.arm.set_joint_positions(joint_positions,3) 
        #print('T = ', T, '\n R = ', R, '\n p = ', p)
        [R, p] = get_gripper_pos()
        print('\n p = ', p)
    elif mode == "cobra":
        joint_positions = Cobra_pose
        robot.arm.set_joint_positions(joint_positions,3) 
        print('T = ', T, '\n R = ', R, '\n p = ', p)
    elif mode == "cart":
        [R, p] = get_gripper_pos()
        robot.arm.set_ee_cartesian_trajectory(x = 0.24 - p[0], z = 0.19 - p[2], moving_time=4) # Values should be meter --- THIS IS RELATIVE TO CURRENT POSITION !!!
        [R, p] = get_gripper_pos()
        print('\n p = ', p)
    elif mode == "x":
        [R, p] = get_gripper_pos()
        robot.arm.set_ee_cartesian_trajectory(x = 0.07, moving_time=1) # Values should be meter --- THIS IS RELATIVE TO CURRENT POSITION !!!
        [R, p] = get_gripper_pos()
        print('\n p = ', p)
    elif mode == "z":
        [R, p] = get_gripper_pos()
        robot.arm.set_ee_cartesian_trajectory(z = 0.01, moving_time=1) # Values should be meter --- THIS IS RELATIVE TO CURRENT POSITION !!!
        [R, p] = get_gripper_pos()
        print('\n p = ', p)
    